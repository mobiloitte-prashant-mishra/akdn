<?php

/**
 * Implements hook_block_info().
 */
function akaa_custom_block_info() {
  $blocks = array(
    'akaa_news_resources_tiles' => array(
      'info' => t('AKAA Latest News & Resources Block '),
      'cache' => DRUPAL_NO_CACHE,
    ),
    'akaa_see_also_block' => array(
      'info' => t('AKAA See Also'),
      'cache' => DRUPAL_NO_CACHE,
    ),
    'akaa_custom_award_cycle_related' => array(
      'info' => t('AKAA Award cycle Related Information:Jury'),
      'cache' => DRUPAL_NO_CACHE,
    ),
    '_akaa_custom_social_sharing' => array(
      'info' => t('AKAA custom Social Sharing Block Home Page'),
      'cache' => DRUPAL_NO_CACHE,
    ),
    'akaa_custom_press_centre_rhs' => array(
      'info' => t('AKAA Press Centre RHS Block'),
      'cache' => DRUPAL_NO_CACHE,
    ),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function akaa_custom_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'akaa_news_resources_tiles':
      if ($content = _akaa_custom_latest_news_resouces()) {
        $block['content'] = $content;
        $block['subject'] = t('AKAA News & Resources for home page');
      }
      break;
    case 'akaa_see_also_block':
      $block['content'] = _akaa_see_also_block();
      $block['subject'] = t('AKAA See Also');
      break;
    case 'akaa_custom_award_cycle_related':
      $block['content'] = _akaa_custom_award_cycle_related_informations();
      $block['subject'] = t('AKAA Award cycle Related Information:Jury');
      break;
    case '_akaa_custom_social_sharing':
      $block['content'] = _akaa_custom_social_sharing_block();
      $block['subject'] = t('AKAA custom Social Sharing Block');
      break;
    case 'akaa_custom_press_centre_rhs':
      $block['content'] = akaa_custom_press_centre_rhs();
     if(strpos($block['content'], 'views-row') === false){
        $block['content'] = views_embed_view('custom_header_block', 'akaa_press_centre_rhs');
      }
      $block['subject'] = t('AKAA Press Centre RHS Block');
      break;
  }
  return $block;
}
/*
 * Get Rhs block on press Centre
 */
function akaa_custom_press_centre_rhs(){
    if(isset($_GET['f'])){
    foreach($_GET['f'] as $value){
      $val = explode(':', $value);
      if($val[0] =='field_cycle_year'){
        return views_embed_view('akaa_projects', 'block_5', $val[1]);
      }
    }
  }
}
/*
 * Get latest News & Resources
 */
function _akaa_custom_latest_news_resouces() {
  //get latest Publications for AKAA
  $content = views_embed_view('akaa_home_page', 'block_3');
  //get latest Press Release for AKAA
  $content .= views_embed_view('akaa_home_page', 'block_5');
  //get latest In the Media for AKAA
  $content .= views_embed_view('akaa_home_page', 'block_4');
  return $content;
}

/*
 * Get latest News & Resources
 */
function _akaa_custom_social_sharing_block() {
  //get latest stay connections facebook
  $content = views_embed_view('facebook_feeds', 'akaa_facebook_home_page');
  //get latest stay connections itunes
  $content .= views_embed_view('custom_header_block', 'block_1');
  //get latest stay connections Youtube
  $content .= views_embed_view('facebook_feeds', 'akaa_youtube_home_page');
  return $content;
}

function _akaa_see_also_block() {

  $tname = taxonomy_get_term_by_name('Aga Khan Award for Architecture (AKAA)', 'tags');
  $tid = reset($tname)->tid;
  if ((arg(1) == 'steering-committee') || (arg(1) == 'master-jury')) {
    $node = node_load(arg(2));
  }else{
    $node = node_load(arg(1));
  }
  $cycle_tid = $node->field_cycle_year[LANGUAGE_NONE][0]['tid'];
  $array = array(
    '2' => 'News',
    '2611' => 'In the media',
    '4' => 'Press Releases',
    'publication' => 'Publications',
    'speech' => 'Speeches',
    'Video' => 'Videos',
    'gallery' => 'Photographs',
    'event' => 'Events',
    'project' => 'Project Locations'
  );
  $path = '/architecture/press-centre';
  $output = '';
  $output .= '<div class = "see_also_wrapper">';
  $output .= '<ul>';
  foreach ($array as $key => $value) {
    if ($key != 'project') {
      $get_count = _akaa_node_count($key, $tid, $cycle_tid);
      if ($get_count > 0) {
        if ($key == 2 || $key == 4 || $key == 2611) {
          if ($value == 'Press Releases') {
            $value = 'Press Release';
          }
          $key = $value;
        }
        $output .= '<li class = "rows">';
        $param = '?f[0]=entity_type:' . $key . '&f[1]=field_cycle_year:' . $cycle_tid;
        $url = $path . $param;
        $output .= '<a href="' .$url . '">' . $value . '</a>';
        $output .= '</li>';
      }
    }
    else {
      $output .= '<li class = "rows">';
      $output .= l($value, 'architecture/projects/map');
      $output .= '</li>';
    }
  }
  $output .= '</ul></div>';
  return $output;
}

function _akaa_node_count($key, $tid, $cid) {

  if (is_numeric($key)) {
    $type = 'article';
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', $type)
      ->fieldCondition('field_tags', 'tid', $tid)
      ->fieldCondition('field_article_cat', 'tid', $key)
      ->fieldCondition('field_cycle_year', 'tid', $cid);
    $result = $query->count()->execute();
  }
  else {
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', $key)
      ->fieldCondition('field_tags', 'tid', $tid)
      ->fieldCondition('field_cycle_year', 'tid', $cid);
    $result = $query->count()->execute();

  }
  return $result;
}

/**
 *
 * AKAA Form Alter
 */
function akaa_custom_form_alter(&$form, &$form_state, $form_id) {
  //Update name of the Award winning text
  if ($form_id == 'views_exposed_form') {
    if ($form_state['view']->name == 'akaa_projects' && $form_state['view']->current_display == 'page') {
      $form['field_winner_value']['#options'][1] = 'Show Award recipients only';
      $form['combine']['#attributes'] = array('placeholder' => array(t('Enter a Keyword')));
      $form['field_region_tid']['#attributes'] = array('placeholder' => array(t('Select a Region')));
      $form['field_arch_country_tid']['#attributes'] = array('placeholder' => array(t('Select a Country')));
      $form['field_city_tid']['#attributes'] = array('placeholder' => array(t('Select a City')));
      $form['field_building_type_tid']['#attributes'] = array('placeholder' => array(t('Select a building type')));
      $form['field_cycle_year_tid']['#options']['All'] = 'Select a Cycle';
    }
  }
}


/**
 * [akaa_custom_theme description]
 * @param  [type] $existing [description]
 * @param  [type] $type     [description]
 * @param  [type] $theme    [description]
 * @param  [type] $path     [description]
 * @return [type]           [description]
 */
function akaa_custom_theme($existing, $type, $theme, $path) {
  $themes['views_view_field__akaa_projects__other_cycles_block__nothing'] = array(
    'template' => 'templates/views-view-field--akaa-projects--other-cycles-block--nothing',
    'original hook' => 'views_view_fields',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view_fields',
      'akdn_custom_preprocess_views_view_field__akaa_projects__other_cycles_block__nothing',
    ),
    'arguments' => array('view' => NULL),
  );
  $themes['views_view_field__akaa_projects__other_arch_projects__nothing'] = array(
    'template' => 'templates/views-view-field--akaa-projects--other-arch-projects--nothing',
    'original hook' => 'views_view_fields',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view_fields',
      'akdn_custom_preprocess_views_view_field__akaa_projects__other_arch_projects__nothing',
    ),
    'arguments' => array('view' => NULL),
  );
  return $themes;
}

/**
 *  Shot title field of award Cycle
 */

function akdn_custom_preprocess_views_view_field__akaa_projects__other_arch_projects__nothing(&$variables) {
  $row = $variables['row'];
  $tid = reset($row->_field_data['nid']['entity']->field_cycle_year)[0]['tid'];
  $query = db_select('field_data_field_short_title', 's');
  $query->leftJoin('field_data_field_cycle_year', 'c', 'c.entity_id = s.entity_id');
  $short_title_result = $query->fields('s',array('field_short_title_value'))
    ->fields('c', array('entity_id'))
    ->condition('c.field_cycle_year_tid', $tid, '=')
    ->condition('c.bundle', 'award_cycle', '=')
    ->execute()
    ->fetchAll();
  $short_title = explode(' ',$short_title_result[0]->field_short_title_value);
  $variables['other_cycles_projects'] = $short_title[0];
}


function akdn_custom_preprocess_views_view_field__akaa_projects__other_cycles_block__nothing(&$variables) {
  $row = $variables['row'];

  $cycle_id = $row->taxonomy_term_data_field_data_field_cycle_year_tid;
  $query = db_select('field_data_field_short_title', 's');
  $query->leftJoin('field_data_field_cycle_year', 'c', 'c.entity_id = s.entity_id');
  $short_title_result = $query->fields('s', array('field_short_title_value'))
    ->fields('c', array('entity_id'))
    ->condition('c.field_cycle_year_tid', $cycle_id, '=')
    ->condition('c.bundle', 'award_cycle', '=')
    ->execute()
    ->fetchAll();
  $short_title = $short_title_result[0]->field_short_title_value;
  $cycle_nid = $short_title_result[0]->entity_id;

  $proj_short_title = reset($row->_field_data['nid']['entity']->field_short_title)[0]['value'];

  $country = akaa_load_term_name(reset($row->_field_data['nid']['entity']->field_arch_country)[0]['tid']);
  $building_type = akaa_load_term_name(reset($row->_field_data['nid']['entity']->field_building_type)[0]['tid']);
  $concat_build_cout = '(' . $building_type . ' , ' . $country . ')';
  $project_nid = $row->nid;
  $read = l('View', 'node/' . $project_nid);
  $readAll = l('All ' . $short_title . ' projects', 'node/' . $cycle_nid);


  $output = '';

  $output .= '<div class = "other_cycle">';
  $output .= '<div class = "cycle_year">';
  $output .= $short_title;
  $output .= '</div>';
  $output .= '<div class = "project_title">';
  $output .= l($proj_short_title, 'node/' . $project_nid);
  $output .= '</div>';
  $output .= '<div class = "concat_build_country">';
  $output .= $concat_build_cout;
  $output .= '</div>';
  $output .= '<div class = "view_links">';
  $output .= $read . ' | ' . $readAll;
  $output .= '</div>';

  $variables['other_cycles'] = $output;

}

function akaa_load_term_name($tid) {
  $load = taxonomy_term_load($tid);
  return $load->name;
}

/*
 * Award cycle Related Informations
 */

function _akaa_custom_award_cycle_related_informations(){
  $nid = arg(2);
  $node = node_load($nid);
  if(!empty($node->field_awards_cycle_links[LANGUAGE_NONE])){
    $output = '';
    $output .= '<div class="akaa-award-cycle-related-info">';
    $output .= '<ul>';
    foreach ($node->field_awards_cycle_links[LANGUAGE_NONE] as $url_value){
      if($url_value['url']){
        $url = url($url_value['url']);
        $title = $url_value['title'];
        $target =  $url_value['attributes']['target'];
        $output .= '<li><a href="'.$url.'" target="'.$target.'">'.$title.'</a></li>';
      }
    }
    $output .='</ul>';
    $output .='</div>';
    return $output;
  }
}


/**
 * Implements hook_menu().
 */
function akaa_custom_menu() {
  $items['akaa_custom_menu/autocomplete/%/%/%'] = array(
    'page callback' => 'akaa_custom_menu_autocomplete',
    'page arguments' => array(2, 3, 4),
    'access callback' => 'reference_autocomplete_access',
    'access arguments' => array(2, 3, 4),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Menu callback for the autocomplete results.
 */
function akaa_custom_menu_autocomplete($entity_type, $bundle, $field_name, $string = '') {
  $field = field_info_field($field_name);
  $instance = field_info_instance($entity_type, $field_name, $bundle);

  $options = array(
    'string' => $string,
    'match' => $instance['widget']['settings']['autocomplete_match'],
    'limit' => 200,
  );
  $references = node_reference_potential_references($field, $options);

  $matches = array();
  foreach ($references as $id => $row) {
    // Markup is fine in autocompletion results (might happen when rendered
    // through Views) but we want to remove hyperlinks.
    $suggestion = preg_replace('/<a href="([^<]*)">([^<]*)<\/a>/', '$2', $row['rendered']);
    // Add a class wrapper for a few required CSS overrides.
    $matches[$row['title'] . " [nid:$id]"] = '<div class="reference-autocomplete">' . $suggestion . '</div>';
  }

  drupal_json_output($matches);
}


function akaa_custom_menu_field_widget_info() {
  return array(
    'node_reference_autocomplete_deluxe' => array(
      'label'       => t('Autocomplete Deluxe'),
      'description' => t('Display the list of referenceable nodes as a textfield with autocomplete deluxe behaviour.'),
      'field types' => array('node_reference'),
      'settings'    => array(
        'autocomplete_match' => 'contains',
        'size' => 60,
        'autocomplete_path' => 'akaa_custom_menu/autocomplete',
      ),
    ),
  );
}

